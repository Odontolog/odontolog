CREATE TABLE activities
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type          VARCHAR(255),
    actor_id      UUID,
    reviewable_id BIGINT,
    description   VARCHAR(255),
    metadata      JSONB,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_activities PRIMARY KEY (id)
);

CREATE TABLE attachments
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    filename    VARCHAR(255),
    location    VARCHAR(255),
    uploader_id UUID,
    size        INTEGER,
    CONSTRAINT pk_attachments PRIMARY KEY (id)
);

CREATE TABLE patients
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name             VARCHAR(255),
    address          VARCHAR(255),
    cpf              VARCHAR(255),
    avatar_url       VARCHAR(255),
    phone_number     VARCHAR(255),
    rg               VARCHAR(255),
    city             VARCHAR(255),
    state            VARCHAR(255),
    ethnicity        VARCHAR(255),
    sex              VARCHAR(255),
    birth_date       date,
    marital_status   VARCHAR(255),
    occupation       VARCHAR(255),
    appointment_date date,
    CONSTRAINT pk_patients PRIMARY KEY (id)
);

CREATE TABLE pre_procedures
(
    id BIGINT NOT NULL,
    CONSTRAINT pk_pre_procedures PRIMARY KEY (id)
);

CREATE TABLE procedures
(
    id              BIGINT NOT NULL,
    planned_session INTEGER,
    patient_id      BIGINT NOT NULL,
    status          VARCHAR(255),
    study_sector    VARCHAR(255),
    teeth           TEXT[],
    diagnostic      VARCHAR(255),
    CONSTRAINT pk_procedures PRIMARY KEY (id)
);

CREATE TABLE procedures_attachments
(
    attachment_id BIGINT NOT NULL,
    procedure_id  BIGINT NOT NULL,
    CONSTRAINT pk_procedures_attachments PRIMARY KEY (attachment_id, procedure_id)
);

CREATE TABLE reviewables
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    author_id   UUID,
    name        VARCHAR(255),
    assignee_id UUID,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    notes       VARCHAR(255),
    type        VARCHAR(255),
    deleted     BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_reviewables PRIMARY KEY (id)
);

CREATE TABLE reviews
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comments      VARCHAR(255),
    grade         INTEGER,
    review_status VARCHAR(255),
    supervisor_id UUID                                    NOT NULL,
    reviewable_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_reviews PRIMARY KEY (id)
);

CREATE TABLE treatment_plan_procedures
(
    id                BIGINT NOT NULL,
    treatment_plan_id BIGINT NOT NULL,
    CONSTRAINT pk_treatment_plan_procedures PRIMARY KEY (id)
);

CREATE TABLE treatment_plans
(
    id         BIGINT NOT NULL,
    status     VARCHAR(255),
    patient_id BIGINT NOT NULL,
    CONSTRAINT pk_treatment_plans PRIMARY KEY (id)
);

CREATE TABLE users
(
    id                  UUID                  NOT NULL,
    dtype               VARCHAR(31)           NOT NULL,
    role                VARCHAR(255),
    name                VARCHAR(255),
    email               VARCHAR(255),
    password            VARCHAR(255),
    photo_url           VARCHAR(255),
    deleted             BOOLEAN DEFAULT FALSE NOT NULL,
    clinic_number       INTEGER,
    enrollment_code     VARCHAR(255),
    enrollment_year     INTEGER,
    enrollment_semester INTEGER,
    specialization      VARCHAR(255),
    siape               VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE users_reviewables
(
    supervisor_id  UUID   NOT NULL,
    reviewables_id BIGINT NOT NULL,
    CONSTRAINT pk_users_reviewables PRIMARY KEY (supervisor_id, reviewables_id)
);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE activities
    ADD CONSTRAINT FK_ACTIVITIES_ON_ACTOR FOREIGN KEY (actor_id) REFERENCES users (id);

ALTER TABLE activities
    ADD CONSTRAINT FK_ACTIVITIES_ON_REVIEWABLE FOREIGN KEY (reviewable_id) REFERENCES reviewables (id);

ALTER TABLE attachments
    ADD CONSTRAINT FK_ATTACHMENTS_ON_UPLOADER FOREIGN KEY (uploader_id) REFERENCES users (id);

ALTER TABLE pre_procedures
    ADD CONSTRAINT FK_PRE_PROCEDURES_ON_ID FOREIGN KEY (id) REFERENCES procedures (id);

ALTER TABLE procedures
    ADD CONSTRAINT FK_PROCEDURES_ON_ID FOREIGN KEY (id) REFERENCES reviewables (id);

ALTER TABLE procedures
    ADD CONSTRAINT FK_PROCEDURES_ON_PATIENT FOREIGN KEY (patient_id) REFERENCES patients (id);

ALTER TABLE reviewables
    ADD CONSTRAINT FK_REVIEWABLES_ON_ASSIGNEE FOREIGN KEY (assignee_id) REFERENCES users (id);

ALTER TABLE reviewables
    ADD CONSTRAINT FK_REVIEWABLES_ON_AUTHOR FOREIGN KEY (author_id) REFERENCES users (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_REVIEWABLE FOREIGN KEY (reviewable_id) REFERENCES reviewables (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_SUPERVISOR FOREIGN KEY (supervisor_id) REFERENCES users (id);

ALTER TABLE treatment_plans
    ADD CONSTRAINT FK_TREATMENT_PLANS_ON_ID FOREIGN KEY (id) REFERENCES reviewables (id);

ALTER TABLE treatment_plans
    ADD CONSTRAINT FK_TREATMENT_PLANS_ON_PATIENT FOREIGN KEY (patient_id) REFERENCES patients (id);

ALTER TABLE treatment_plan_procedures
    ADD CONSTRAINT FK_TREATMENT_PLAN_PROCEDURES_ON_ID FOREIGN KEY (id) REFERENCES procedures (id);

ALTER TABLE treatment_plan_procedures
    ADD CONSTRAINT FK_TREATMENT_PLAN_PROCEDURES_ON_TREATMENT_PLAN FOREIGN KEY (treatment_plan_id) REFERENCES treatment_plans (id);

ALTER TABLE procedures_attachments
    ADD CONSTRAINT fk_proatt_on_attachment FOREIGN KEY (attachment_id) REFERENCES attachments (id);

ALTER TABLE procedures_attachments
    ADD CONSTRAINT fk_proatt_on_procedure FOREIGN KEY (procedure_id) REFERENCES procedures (id);

ALTER TABLE users_reviewables
    ADD CONSTRAINT fk_userev_on_reviewable FOREIGN KEY (reviewables_id) REFERENCES reviewables (id);

ALTER TABLE users_reviewables
    ADD CONSTRAINT fk_userev_on_supervisor FOREIGN KEY (supervisor_id) REFERENCES users (id);