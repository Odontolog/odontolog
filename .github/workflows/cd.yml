name: Deploy to DigitalOcean Droplet

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: "registry.digitalocean.com/odontolog"
  BACKEND_IMAGE_NAME: "server"

jobs:
  publish_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v4
        
      - name: Build container image
        working-directory: ./server
        run: docker build -t $REGISTRY/$BACKEND_IMAGE_NAME:${GITHUB_SHA::7} -t $REGISTRY/$BACKEND_IMAGE_NAME:latest .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove old images from Container Registry
        uses: mrsethsamuel/digitalocean-docker-registry-cleanup@v1
        with:
          repository: server
          num_to_keep: 2
          perform_gc: true

      - name: Push image to DigitalOcean Container Registry
        run: docker push -a $REGISTRY/$BACKEND_IMAGE_NAME
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_publish_server


    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Copy compose to Droplet
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: docker-compose.prod.yml
          target: odontolog

      # Faz o deploy via SSH usando o compose
      - name: Deploy to DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            set -e
            cd odontolog
            docker login registry.digitalocean.com -u "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" -p "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}"
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
            docker system prune -f